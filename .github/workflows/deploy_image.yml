name: Build and Deploy

on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt
      - name: test
        run: |
          export PYTHONPATH="${PYTHONPATH}:./dataengine"
          make test
          make coverage
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
      - name: build and push docker image
        uses: elgohr/Publish-Docker-Github-Action@master
        env:
          APP_VERSION: ${{ github.sha }}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          name: apmaros/budgetdesk
          snapshot: true
          tags: "latest"
          buildargs: APP_VERSION
          no_push: ${{ github.ref_name != 'main' }}
  deploy:
    if: ${{ github.ref_name == 'main' }}
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: install ssh key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
          name: id_rsa # optional
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - name: deploy api
        run: docker --host ${{ secrets.DOCKER_SWARM_HOST }} stack deploy --prune -c dataengine-stack.yml dataengine
      - name: Set Release Version from Tag
        run: echo "RELEASE_VERSION=${{ GITHUB_REF:10 }}" >> $GITHUB_ENV
      - name: Create New Relic deployment marker
        uses: newrelic/deployment-marker-action@v1
        with:
          apiKey: ${{ secrets.NEW_RELIC_API_KEY }}
          accountId: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
          applicationId: ${{ secrets.NEW_RELIC_APPLICATION_ID }}
          revision: "${{ env.RELEASE_VERSION }}"

